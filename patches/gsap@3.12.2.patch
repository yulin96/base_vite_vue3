diff --git a/types/gsap-core.d.ts b/types/gsap-core.d.ts
index 36c88d8eb501cde601c4c9a3bdde9fbf95fc21db..60a184dbabeae9851fba207cb9d5cbce9d3061c8 100644
--- a/types/gsap-core.d.ts
+++ b/types/gsap-core.d.ts
@@ -1,6 +1,6 @@
 declare namespace gsap {
 
-  type RegisterablePlugins = 
+  type RegisterablePlugins =
     | Ease
     | EasePack
     | ExpoScaleEase
@@ -22,7 +22,7 @@ declare namespace gsap {
 
   // querySelector returns type Element | null
   type DOMTarget = Element | string | null | Window | ArrayLike<Element | string | Window | null>;
-  type TweenTarget = string | object | null; 
+  type TweenTarget = string | object | null;
 
   type Callback = (...args: any[]) => void | null;
   type ContextFunc = (context: Context) => Function | any | void;
@@ -31,7 +31,7 @@ declare namespace gsap {
 
   type Point2D = { x: number, y: number };
   type Position = number | string;
-  
+
   type FunctionBasedValue<T> = (index: number, target: any, targets: any[]) => T;
   type ArrayValue = any[] | FunctionBasedValue<any[]>;
   type BooleanValue = boolean | FunctionBasedValue<boolean>;
@@ -43,7 +43,7 @@ declare namespace gsap {
     (value: number, start?: number, startIsRelative?: boolean): core.Tween;
     tween: core.Tween;
   }
-  
+
   type SVGPathValue = string | SVGPathElement;
   type SVGPathTarget = SVGPathValue | ArrayLike<SVGPathValue>;
   type SVGPrimitive = SVGCircleElement | SVGRectElement | SVGEllipseElement | SVGPolygonElement | SVGPolylineElement | SVGLineElement;
@@ -74,7 +74,7 @@ declare namespace gsap {
 
   interface AnimationVars extends CallbackVars {
     [key: string]: any;
-    data?: any;    
+    data?: any;
     id?: string | number;
     inherit?: boolean;
     paused?: boolean;
@@ -83,7 +83,7 @@ declare namespace gsap {
     repeatRefresh?: boolean;
     reversed?: boolean;
     yoyo?: boolean;
-  }  
+  }
 
   interface CallbackVars {
     callbackScope?: object;
@@ -141,7 +141,7 @@ declare namespace gsap {
   } & {
     [key: string]: string
   }
-  
+
   interface StaggerVars extends CallbackVars, utils.DistributeConfig {
     repeat?: number;
     repeatDelay?: number;
@@ -179,14 +179,14 @@ declare namespace gsap {
       | "circ" | "circ.in" | "circ.out" | "circ.inOut"
       | "elastic" | "elastic.in" | "elastic.out" | "elastic.inOut"
       | "expo" | "expo.in" | "expo.out" | "expo.inOut"
-      | "sine" | "sine.in" | "sine.out" | "sine.inOut" | string;
+    | "sine" | "sine.in" | "sine.out" | "sine.inOut" | (string & {});
 
   interface TweenVars extends AnimationVars {
     delay?: TweenValue;
     duration?: TweenValue;
     ease?: EaseString | EaseFunction;
     endArray?: any[];
-    immediateRender?: boolean;    
+    immediateRender?: boolean;
     lazy?: boolean;
     keyframes?: TweenVars[] | object;
     onInterrupt?: Callback;
@@ -208,9 +208,9 @@ declare namespace gsap {
 
   /**
    * Gets or sets GSAP's global configuration settings.
-   * 
+   *
    * Options: autoSleep, force3D, nullTargetWarn, and units
-   * 
+   *
    * ```js
    * gsap.config({force3D: false});
    * ```
@@ -244,7 +244,7 @@ declare namespace gsap {
 
   /**
    * Gets or sets GSAP's global defaults. These will be inherited by every tween.
-   * 
+   *
    * ```js
    * gsap.defaults({ease: "none", duration: 1});
    * ```
@@ -303,7 +303,7 @@ declare namespace gsap {
   function from(targets: TweenTarget, vars: TweenVars): core.Tween;
   /**
    * **Deprecated method signature.** Use the `duration` property instead.
-   * 
+   *
    * ```js
    * gsap.from(".class", 1, {x: 100});
    * ```
@@ -334,7 +334,7 @@ declare namespace gsap {
   function fromTo(targets: TweenTarget, fromVars: TweenVars, toVars: TweenVars): core.Tween;
   /**
    * **Deprecated method signature.** Use the `duration` property instead.
-   * 
+   *
    * ```js
    * gsap.fromTo(".class", 1, {x: 0}, {x: 100});
    * ```
@@ -353,7 +353,7 @@ declare namespace gsap {
    *
    * ```js
    * gsap.to(obj, {id: "myTween", x: 100});
-   * 
+   *
    * // later
    * let tween = gsap.getById("myTween");
    * ```
@@ -403,7 +403,7 @@ declare namespace gsap {
    * ```js
    * gsap.install(myTween);
    * ```
-   * 
+   *
    * @param {object} targets
    * @returns {gsap} The gsap object
    * @memberof gsap
@@ -416,7 +416,7 @@ declare namespace gsap {
    * ```js
    * gsap.isTweening("#id");
    * ```
-   * 
+   *
    * @param {TweenTarget} targets
    * @returns {boolean} Status
    * @memberof gsap
@@ -490,7 +490,7 @@ declare namespace gsap {
    *
    * ```js
    * let setX = gsap.quickSetter("#id", "x", "px");
-   * 
+   *
    * // later
    * setX(100);
    * ```
@@ -565,10 +565,10 @@ declare namespace gsap {
    * @link https://greensock.com/docs/v3/GSAP/gsap.registerEffect()
    */
   function registerEffect(effect: object): void;
-  
+
   /**
    * Installs the specified GSAP plugins, provided they have been loaded already.
-   * 
+   *
    * ```js
    * gsap.registerPlugin(MorphSVPlugin, MotionPathPlugin);
    * ```
@@ -578,7 +578,7 @@ declare namespace gsap {
    * @link https://greensock.com/docs/v3/GSAP/gsap.registerPlugin()
    */
   function registerPlugin(...args: object[]): void;
-  
+
   /**
    * Immediately sets properties of the target(s) to the properties specified.
    *
@@ -620,7 +620,7 @@ declare namespace gsap {
   function to(targets: TweenTarget, vars: TweenVars): core.Tween;
   /**
    * **Deprecated method signature.** Use the `duration` property instead.
-   * 
+   *
    * ```js
    * gsap.to(".class", 1, {x: 100});
    * ```
@@ -640,7 +640,7 @@ declare namespace gsap {
    * ```js
    * // unhooks the GSAP ticker
    * gsap.ticker.remove(gsap.updateRoot);
-   * 
+   *
    * // sets the root time to 20 seconds manually
    * gsap.updateRoot(20);
    * ```
@@ -650,7 +650,7 @@ declare namespace gsap {
    * @memberof gsap
    * @link https://greensock.com/docs/v3/GSAP/gsap.updateRoot()
    */
-  function updateRoot(time: number): void;  
+  function updateRoot(time: number): void;
 }
 
 // TODO: Move to files where declared
@@ -680,7 +680,7 @@ declare class TimelineMax extends gsap.core.Timeline {}
 
 declare module "gsap/gsap-core" {
 
-  const _gsap: typeof gsap;  
+  const _gsap: typeof gsap;
 
   // TODO: Move to files where declared
   /**
