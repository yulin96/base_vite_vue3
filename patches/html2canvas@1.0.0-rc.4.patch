diff --git a/dist/html2canvas.esm.js b/dist/html2canvas.esm.js
index 4067fca7294920bc0354fc19e6c770d7d76fb43f..07cba1fb12767e5760577b37f3fe122580a20cf6 100644
--- a/dist/html2canvas.esm.js
+++ b/dist/html2canvas.esm.js
@@ -6157,6 +6157,7 @@ var CanvasRenderer = /** @class */ (function () {
         return __awaiter(this, void 0, void 0, function () {
             var _a, font, fontFamily, fontSize;
             var _this = this;
+            _this.ctx.textBaseline = 'ideographic'
             return __generator(this, function (_b) {
                 _a = this.createFontStyle(styles), font = _a[0], fontFamily = _a[1], fontSize = _a[2];
                 this.ctx.font = font;
@@ -6395,7 +6396,7 @@ var CanvasRenderer = /** @class */ (function () {
             var _i, _a, child, _b, _c, child, _d, _e, child, _f, _g, child, _h, _j, child, _k, _l, child, _m, _o, child;
             return __generator(this, function (_p) {
                 switch (_p.label) {
-                    case 0: 
+                    case 0:
                     // https://www.w3.org/TR/css-position-3/#painting-order
                     // 1. the background and borders of the element forming the stacking context.
                     return [4 /*yield*/, this.renderNodeBackgroundAndBorders(stack.element)];
@@ -6415,7 +6416,7 @@ var CanvasRenderer = /** @class */ (function () {
                     case 4:
                         _i++;
                         return [3 /*break*/, 2];
-                    case 5: 
+                    case 5:
                     // 3. For all its in-flow, non-positioned, block-level descendants in tree order:
                     return [4 /*yield*/, this.renderNodeContent(stack.element)];
                     case 6:
diff --git a/dist/html2canvas.js b/dist/html2canvas.js
index 6de1b1b0a07da58b33d1a40b563d076f1df76eda..e687b57902569c59c82a96855a396bc8d3aac6a8 100644
--- a/dist/html2canvas.js
+++ b/dist/html2canvas.js
@@ -6163,6 +6163,7 @@
             return __awaiter(this, void 0, void 0, function () {
                 var _a, font, fontFamily, fontSize;
                 var _this = this;
+                _this.ctx.textBaseline = 'ideographic'
                 return __generator(this, function (_b) {
                     _a = this.createFontStyle(styles), font = _a[0], fontFamily = _a[1], fontSize = _a[2];
                     this.ctx.font = font;
@@ -6401,7 +6402,7 @@
                 var _i, _a, child, _b, _c, child, _d, _e, child, _f, _g, child, _h, _j, child, _k, _l, child, _m, _o, child;
                 return __generator(this, function (_p) {
                     switch (_p.label) {
-                        case 0: 
+                        case 0:
                         // https://www.w3.org/TR/css-position-3/#painting-order
                         // 1. the background and borders of the element forming the stacking context.
                         return [4 /*yield*/, this.renderNodeBackgroundAndBorders(stack.element)];
@@ -6421,7 +6422,7 @@
                         case 4:
                             _i++;
                             return [3 /*break*/, 2];
-                        case 5: 
+                        case 5:
                         // 3. For all its in-flow, non-positioned, block-level descendants in tree order:
                         return [4 /*yield*/, this.renderNodeContent(stack.element)];
                         case 6:
